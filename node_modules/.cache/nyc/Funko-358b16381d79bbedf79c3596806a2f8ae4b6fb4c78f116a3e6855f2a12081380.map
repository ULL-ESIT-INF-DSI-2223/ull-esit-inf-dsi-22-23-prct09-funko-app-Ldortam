{"version":3,"file":"/home/usuario/Practicas/PR9_/src/ejercicio1/Funko.ts","sources":["/home/usuario/Practicas/PR9_/src/ejercicio1/Funko.ts"],"names":[],"mappings":"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","sourcesContent":["export enum Tipo {'Pop!', 'Pop! Rides', 'Vynil Soda', 'Vynil Gold'}\nexport enum Genero {'Animación', 'Películas y TV', 'Videojuegos', 'Deportes', 'Música', 'Anime'}\n/**\n * Clase Funko\n * @param ID Identificador único del Funko\n * @param nombre Nombre del Funko\n * @param descripcion Descripcion del Funko\n * @param tipo Tipo, Pop!, Pop! Rides, Vynil Soda o Vynil Gold, entre otros\n * @param genero Genero, Animación, Películas y TV, Videojuegos, Deportes, Música o Ánime, entre otras\n * @param franquicia Franquicia, The Big Bang Theory, Game of Thrones, Sonic The Hedgehog o Marvel: Guardians of the Galaxy, entre otras.\n * @param numero Número identificativo del Funko dentro de la franquicia correspondiente\n * @param exclusivo Verdadero en el caso de que el Funko sea exclusivo o falso en caso contrario\n * @param caracteristicasEspeciales Característica especiales del Funko como, por ejemplo, si brilla en la oscuridad o si su cabeza balancea\n * @param valorMercado Precio del Funko\n */\nexport class Funko {\n    private ID_:number\n    private nombre_: string\n    private descripcion_: string\n    private tipo_: Tipo\n    private genero_: Genero\n    private franquicia_: string\n    private numero_: number\n    private exclusivo_: boolean\n    private caracteristicasEspeciales_: string\n    private valorMercado_: number\n\n    /**\n     * Constructor de la clase\n     * @param ID Identificador único del Funko\n     * @param nombre Nombre del Funko\n     * @param descripcion Descripcion del Funko\n     * @param tipo Tipo, Pop!, Pop! Rides, Vynil Soda o Vynil Gold, entre otros\n     * @param genero Genero, Animación, Películas y TV, Videojuegos, Deportes, Música o Ánime, entre otras\n     * @param franquicia Franquicia, The Big Bang Theory, Game of Thrones, Sonic The Hedgehog o Marvel: Guardians of the Galaxy, entre otras.\n     * @param numero Número identificativo del Funko dentro de la franquicia correspondiente\n     * @param exclusivo Verdadero en el caso de que el Funko sea exclusivo o falso en caso contrario\n     * @param caracteristicasEspeciales Característica especiales del Funko como, por ejemplo, si brilla en la oscuridad o si su cabeza balancea\n     * @param valorMercado Precio del Funko\n     */\n    constructor(ID:number, nombre: string, descripcion: string, tipo: Tipo,\n                genero: Genero, franquicia: string, numero: number, exclusivo: boolean,\n                caracteristicasEspeciales: string, valorMercado: number) {\n        this.ID_ = ID;\n        this.nombre_ = nombre\n        this.descripcion_ = descripcion\n        this.tipo_ = tipo\n        this.genero_ = genero\n        this.franquicia_ = franquicia\n        this.numero_ = numero\n        this.exclusivo_ = exclusivo\n        this.caracteristicasEspeciales_ = caracteristicasEspeciales\n        if (valorMercado >= 0) {\n            this.valorMercado_ = valorMercado\n        } else {\n            throw new Error('El valor del Mercado ser positivo')\n        }\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param ID Identificador único del Funko\n     * @returns ID\n     */\n    setID(ID: number) {\n        this.ID_ = ID\n        return this.ID_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param nombre Nombre del Funko\n     * @returns nombre\n     */\n    setNombre(nombre: string) {\n        this.nombre_ = nombre\n        return this.nombre_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param descripcion Descripcion del Funko\n     * @returns descripcion\n     */\n    setDescripcion(descripcion: string) {\n        this.descripcion_ = descripcion\n        return this.descripcion_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param tipo Tipo, Pop!, Pop! Rides, Vynil Soda o Vynil Gold, entre otros\n     * @returns tipo\n     */\n    setTipo(tipo: Tipo) {\n        this.tipo_ = tipo\n        return this.tipo_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param genero Genero, Animación, Películas y TV, Videojuegos, Deportes, Música o Ánime, entre otras\n     * @returns genero\n     */\n    setGenero(genero: Genero) {\n        this.genero_ = genero\n        return this.genero_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param franquicia Franquicia, The Big Bang Theory, Game of Thrones, Sonic The Hedgehog o Marvel: Guardians of the Galaxy, entre otras.\n     * @returns franquicia\n     */\n    setFranquicia(franquicia: string) {\n        this.franquicia_ = franquicia\n        return this.franquicia_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param numero Número identificativo del Funko dentro de la franquicia correspondiente\n     * @returns numero\n     */\n    setNumero(numero: number) {\n        this.numero_ = numero\n        return this.numero_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param exclusivo Verdadero en el caso de que el Funko sea exclusivo o falso en caso contrario\n     * @returns exclusivo\n     */\n    setExclusivo(exclusivo: boolean) {\n        this.exclusivo_ = exclusivo\n        return this.exclusivo_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param caracteristicasEspeciales Característica especiales del Funko como, por ejemplo, si brilla en la oscuridad o si su cabeza balancea\n     * @returns caracteristicasEspeciales\n     */\n    setCaracteresEspeciales(caracteristicasEspeciales: string) {\n        this.caracteristicasEspeciales_ = caracteristicasEspeciales\n        return this.caracteristicasEspeciales_\n    }\n    /**\n     * Método para cambiar valor del elemento\n     * @param valorMercado Precio del Funko\n     * @returns valorMercado\n     */\n    setValorMercado(valorMercado: number) {\n        this.valorMercado_ = valorMercado\n        return this.valorMercado_\n    }\n\n    /**\n     * Método para mostrar valor del elemento\n     * @returns ID\n     */\n    getID() {\n        return this.ID_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns nombre\n     */\n    getNombre() {\n        return this.nombre_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns descripcion\n     */\n    getDescripcion() {\n        return this.descripcion_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns tipo\n     */\n    getTipo() {\n        return this.tipo_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns genero\n     */\n    getGenero() {\n        return this.genero_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns franquicia\n     */\n    getFranquicia() {\n        return this.franquicia_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns numero\n     */\n    getNumero() {\n        return this.numero_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns exclusivo\n     */\n    getExclusivo() {\n        return this.exclusivo_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns caracteristicasEspeciales\n     */\n    getCaracteresEspeciales() {\n        return this.caracteristicasEspeciales_\n    }\n    /**\n     * Método para mostrar valor del elemento\n     * @returns valorMercado_\n     */\n    getValorMercado() {\n        return this.valorMercado_\n    }\n}"]}