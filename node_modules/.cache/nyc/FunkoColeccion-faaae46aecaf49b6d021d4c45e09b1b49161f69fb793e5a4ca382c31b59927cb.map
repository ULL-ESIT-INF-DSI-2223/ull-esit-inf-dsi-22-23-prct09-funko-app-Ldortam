{"version":3,"file":"/home/usuario/Practicas/PR9_/src/ejercicio1/FunkoColeccion.ts","sources":["/home/usuario/Practicas/PR9_/src/ejercicio1/FunkoColeccion.ts"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAE1B,IAAY,cAUX;AAVD,WAAY,cAAc;IACxB,mCAAiB,CAAA;IACjB,kDAA2B,CAAA;IAC3B,+BAAa,CAAA;IACb,wCAAiB,CAAA;IACjB,2CAAyB,CAAA;IACzB,wCAAiB,CAAA;IACjB,yCAAuB,CAAA;IACvB,+EAAwD,CAAA;IACxD,oDAAkC,CAAA;AACpC,CAAC,EAVW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAUzB;AAED,MAAa,cAAc;IAEH;IAApB,YAAoB,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;IACnC,CAAC;IAED,GAAG,CAAC,KAAY;QACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAG,MAAM,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,EAAE,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAA;aAC9D;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACvB,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAA;IAC7C,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,iBAAyB,EAAE,aAAqB;QACjE,IAAI,IAAI,GAAY,KAAK,CAAC;QAC1B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACvD,IAAI,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;gBACzC,QAAO,iBAAiB,EAAE;oBACxB,KAAK,cAAc,CAAC,MAAM;wBACxB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAA;wBAC3C,MAAK;oBAEP,KAAK,cAAc,CAAC,WAAW;wBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAA;wBAChD,MAAK;oBAEP,KAAK,cAAc,CAAC,IAAI;wBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;4BAC1B,IAAI,IAAI,GAAS,CAAC,CAAC;4BACnB,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,aAAa,EAAE;gCACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;gCAChC,MAAK;6BACN;yBACF;wBACD,MAAK;oBAEP,KAAK,cAAc,CAAC,MAAM;wBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;4BAC1B,IAAI,MAAM,GAAW,CAAC,CAAC;4BACvB,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,aAAa,EAAE;gCACvC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;gCACpC,MAAK;6BACN;yBACF;wBACD,MAAK;oBAEP,KAAK,cAAc,CAAC,UAAU;wBAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,CAAA;wBAC/C,MAAK;oBAEP,KAAK,cAAc,CAAC,MAAM;wBACxB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAC,EAAE,CAAC,CAAC,CAAA;wBACxD,MAAK;oBAEP,KAAK,cAAc,CAAC,SAAS;wBAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAA;wBAC1D,MAAK;oBAEP,KAAK,cAAc,CAAC,yBAAyB;wBAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAA;wBACzD,MAAK;oBAEP,KAAK,cAAc,CAAC,YAAY;wBAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,EAAC,EAAE,CAAC,CAAC,CAAA;wBAC9D,MAAK;iBACR;aACF;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAA;aAChE;SACF;QACD,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAA;IAC3C,CAAC;IAED,MAAM,CAAC,EAAU;QACf,IAAI,IAAI,GAAY,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,GAAG,IAAI,CAAC;aACb;QACH,CAAC,CAAC,CAAA;QACF,IAAG,IAAI;YAAE,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAA;aAC7C;YACH,MAAM,IAAI,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAA;SAChE;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC1B,IAAI,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE;gBACjC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;kCACtE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;kCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;oDACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;aAC1G;iBAAM,IAAI,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE;gBACtC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;oCACvE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;oCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;sDACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;aAC5G;iBAAM,IAAI,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE;gBACtC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,MAAM,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;wCACrE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;wCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;0DACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;aAChH;iBAAM;gBACH,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;sCACtE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;sCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;wDACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;aAC9G;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,IAAI,CAAC,EAAU;QACb,IAAI,IAAI,GAAY,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACxB,IAAI,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE;oBACjC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;oCACtE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;oCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;sDACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;iBAC1G;qBAAM,IAAI,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE;oBACtC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;sCACvE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;sCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;wDACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;iBAC5G;qBAAM,IAAI,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE;oBACtC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,MAAM,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;0CACrE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;0CAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;4DACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;iBAChH;qBAAM;oBACH,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,UAAU,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC,aAAa,EAAE;wCACtE,KAAK,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,SAAS,EAAE;wCAC/C,KAAK,CAAC,uBAAuB,EAAE,kBAAkB,KAAK,CAAC,cAAc,EAAE;0DACrD,KAAK,CAAC,eAAe,EAAE,gBAAgB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;iBAC9G;gBACD,IAAI,GAAG,IAAI,CAAA;aACZ;QACH,CAAC,CAAC,CAAA;QACF,IAAG,CAAC,IAAI,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAA;SAChE;IACH,CAAC;CACJ;AAnJD,wCAmJC","sourcesContent":["import { Funko, Genero, Tipo } from './Funko.js';\nimport chalk from \"chalk\";\n\nexport enum AtributosFunko {\n  Nombre = 'Nombre',\n  Descripcion = 'Descripción',\n  Tipo = 'Tipo',\n  Genero = 'Género',\n  Franquicia = 'Franquicia',\n  Numero = 'Número',\n  Exclusivo = 'Exclusivo',\n  CaracteristicasEspeciales = 'Características especiales',\n  ValorMercado = 'Valor del Mercado'\n}\n\nexport class FunkoColeccion {\n\n    constructor(private Funkos: Funko[]) {\n    }\n\n    Add(funko: Funko) {\n        this.Funkos.forEach(funkos => {\n          if(funkos.getID() === funko.getID()) {\n            throw new Error(chalk.red('ERROR: Funko existente en lista'))\n          }\n        });\n        this.Funkos.push(funko)\n        console.log(chalk.green('Funko Añadido'))\n    }\n\n    Modify(ID: number, atributoModificar: string, nuevoAtributo: string){\n      let flag: boolean = false;\n      for (let index = 0; index < this.Funkos.length; index++) {\n        if (ID === this.Funkos[index + 3].getID()) {\n          switch(atributoModificar) {\n            case AtributosFunko.Nombre:\n              this.Funkos[index].setNombre(nuevoAtributo)\n              break\n\n            case AtributosFunko.Descripcion:\n              this.Funkos[index].setDescripcion(nuevoAtributo)\n              break\n\n            case AtributosFunko.Tipo:\n              for (let i = 0; i < 4; i++) {\n                let tipo: Tipo = i;\n                if (tipo.toString() === nuevoAtributo) {\n                  this.Funkos[index].setTipo(tipo)\n                  break\n                }\n              }\n              break\n\n            case AtributosFunko.Genero:\n              for (let i = 0; i < 7; i++) {\n                let genero: Genero = i;\n                if (genero.toString() === nuevoAtributo) {\n                  this.Funkos[index].setGenero(genero)\n                  break\n                }\n              }\n              break\n\n            case AtributosFunko.Franquicia:\n              this.Funkos[index].setFranquicia(nuevoAtributo)\n              break\n\n            case AtributosFunko.Numero:\n              this.Funkos[index].setNumero(parseInt(nuevoAtributo,10))\n              break\n\n            case AtributosFunko.Exclusivo:\n              this.Funkos[index].setExclusivo(JSON.parse(nuevoAtributo))\n              break\n\n            case AtributosFunko.CaracteristicasEspeciales:\n              this.Funkos[index].setCaracteresEspeciales(nuevoAtributo)\n              break\n\n            case AtributosFunko.ValorMercado:\n              this.Funkos[index].setValorMercado(parseInt(nuevoAtributo,10))\n              break\n          }\n        } else {\n          throw new Error(chalk.red('ERROR: Funko inexistente en lista'))\n        }\n      }\n      console.log(chalk.green('Funko Añadido'))\n    }\n\n    Delete(ID: number){\n      let flag: boolean = false;\n      this.Funkos.forEach((funko, index) => {\n        if (funko.getID() === ID) {\n          this.Funkos.slice(index, 1);\n          flag = true;\n        }\n      })\n      if(flag) console.log(chalk.green('Funko Borrado'))\n      else {\n        throw new Error(chalk.red('ERROR: Funko inexistente en lista'))\n      }\n    }\n\n    List() {\n      this.Funkos.forEach(funko => { \n        if (funko.getValorMercado() <= 15) {\n          console.log(chalk.red(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n        } else if (funko.getValorMercado() <= 30) {\n            console.log(chalk.blue(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                  ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                  ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                  Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n        } else if (funko.getValorMercado() <= 60) {\n            console.log(chalk.yellow(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                      ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                      ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                      Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n        } else {\n            console.log(chalk.green(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                    ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                    ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                    Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n        }\n      })\n    }\n\n    Show(ID: number) {\n      let flag: boolean = false;\n      this.Funkos.forEach((funko, index) => {\n        if (funko.getID() === ID) {\n          if (funko.getValorMercado() <= 15) {\n            console.log(chalk.red(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                  ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                  ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                  Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n          } else if (funko.getValorMercado() <= 30) {\n              console.log(chalk.blue(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                    ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                    ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                    Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n          } else if (funko.getValorMercado() <= 60) {\n              console.log(chalk.yellow(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                        ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                        ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                        Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n          } else {\n              console.log(chalk.green(`Funko: ${funko.getID()} ${funko.getNombre()} de ${funko.getFranquicia()} \n                                      ${funko.getTipo()} del género ${funko.getGenero()} con las siguientes habilidades \n                                      ${funko.getCaracteresEspeciales()}. Descripción: ${funko.getDescripcion()}. \n                                      Valor de mercado: ${funko.getValorMercado()}. Exclusivo: ${funko.getExclusivo()}`))\n          }\n          flag = true\n        }\n      }) \n      if(!flag) {\n        throw new Error(chalk.red('ERROR: Funko inexistente en lista'))\n      }\n    }\n}"]}